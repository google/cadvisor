name: Test
on: [push, pull_request]
jobs:
  test:
    strategy:
      matrix:
        go-versions: ['1.20', '1.19']
        platform: [ubuntu-20.04]
        environment-variables: [build/config/plain.sh, build/config/libpfm4.sh, build/config/libipmctl.sh]
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 30
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-versions }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Run presubmit checks
      run: |
        source ${{ matrix.environment-variables }}
        if [[ "${BUILD_PACKAGES}" != "" ]]; then sudo apt-get update; sudo apt-get install ${BUILD_PACKAGES}; fi
        make -e presubmit
    - name: Run tests
      env:
        GOLANG_VERSION: ${{ matrix.go-versions }}
      run: |
        source ${{ matrix.environment-variables }}
        make test
  test-integration:
    strategy:
      matrix:
        go-versions: ['1.20', '1.19']
        platform: [ubuntu-20.04]
        environment-variables: [build/config/plain.sh, build/config/libpfm4.sh, build/config/libipmctl.sh]
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 30
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Run integration tests
      env:
        GOLANG_VERSION: ${{ matrix.go-versions }}
      run: |
        set -ex
        source ${{ matrix.environment-variables }}
        make docker-test-integration
    - name: Upload cAdvisor log file
      uses: actions/upload-artifact@v1
      if: failure() || success()
      with:
        name: cadvisor-${{ matrix.platform }}-${{ matrix.go-versions}}-${{ github.run_number }}-${{ github.run_id }}.log
        path: ${{ github.workspace }}/cadvisor.log
  test-integration-non-amd64:
    strategy:
      matrix:
        go-versions: ['1.20', '1.19']
        arch: [aarch64, armv7]
        platform: [ubuntu20.04]
        environment-variables: [build/config/plain.sh, build/config/libpfm4.sh]
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: uraimo/run-on-arch-action@v2
        name: Run integration tests
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.platform }}
          env: |
            GOLANG_VERSION: ${{ matrix.go-versions }}
          setup: |
            mkdir -p ${{ github.workspace }}/artifacts
          dockerRunArgs: |
            --volume "${{ github.workspace }}/artifacts:/artifacts"
          shell: /bin/bash
          install: |
            set -ex
            apt update -y -qq
            apt install -y -qq ca-certificates curl gnupg lsb-release
            mkdir -p /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list
            apt update -y -qq
            apt install -y -qq make docker-ce docker-ce-cli containerd.io
          run: |
            set -ex
            source ${{ matrix.environment-variables }}
            make docker-test-integration
            cp "${PWD}/cadvisor.log" "/artifacts"
      - name: Upload cAdvisor log file
        uses: actions/upload-artifact@v1
        if: failure() || success()
        with:
          name: cadvisor-${{ matrix.platform }}-${{ matrix.go-versions }}-${{ github.run_number }}-${{ github.run_id }}.log
          path: ${{ github.workspace }}/artifacts/cadvisor.log
